import{_ as n,o as t,c as l,C as a,x as e,a as o,N as p,D as c}from"./app.c693e35b.js";import"./chunks/theme.4a44a463.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"块级元素","slug":"块级元素","link":"#块级元素","children":[]},{"level":2,"title":"html渲染","slug":"html渲染","link":"#html渲染","children":[]}],"relativePath":"note/base.md"}'),r={name:"note/base.md"},i=e("h2",{id:"块级元素",tabindex:"-1"},[o("块级元素 "),e("a",{class:"header-anchor",href:"#块级元素","aria-hidden":"true"},"#")],-1),d=e("p",null,"我对html的了解还停留在这只是一个超文本标记语言，没有太大的意义。在面试的时候也只是因为面试的时候看了下语义化标签，新增的h5标签例如canvas，video等等。",-1),h=e("p",null,"事情的转机是我加入某个技术交流群的人里面，有人提问div是不是块级元素。",-1),_=p(`<p>这是什么吊问题，我在几百年前还在花果山的时候就知道div，p等等都是块级元素啊，但后来他告诉根本没有所谓的块级元素和行内元素，早在很多年前谷歌浏览器就已经是通过浏览器人为的给予div css样式才变成了所谓的块级元素，正确名称应为块盒，同理行内元素也是通过浏览器赋值为行盒。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">                                           user agent stylesheet</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> block</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="html渲染" tabindex="-1">html渲染 <a class="header-anchor" href="#html渲染" aria-hidden="true">#</a></h2><p>这个问题其实大家都肯定会在面试当中遇见过，其中最经典的莫过于从浏览器地址栏里面输入网址按下回车，发送网络请求，缓存机制，三次握手，四次挥手，得到数据亦或是HTML字符串。</p><p>这里重点要讲得就是浏览器将HTML渲染为像素点直至成画的过程，如果大家对请求网络部分不熟悉的可以参考 <em><a href="https://juejin.cn/post/6844903958624878606" target="_blank" rel="noreferrer">https://juejin.cn/post/6844903958624878606</a></em>，非常非常经典的文章，所有初级前端都应该看的一篇文章。</p><p>在开始讲之前</p>`,6);function m(C,u,y,D,v,A){const s=c("Image");return t(),l("div",null,[i,d,h,a(s,{srcType:"surprise"}),_,a(s,{srcType:"renderHtml",width:"100vw",height:"300px"})])}const b=n(r,[["render",m]]);export{T as __pageData,b as default};
